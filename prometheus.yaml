apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    name: in-cluster
    namespace: monitor
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 34.1.1
    helm:
      skipCrds: true
      values: |
        server:
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/tls-acme: 'true'
              nginx.ingress.kubernetes.io/rewrite-target: /grafana
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/ssl-passthrough: "true"
              cert-manager.io/cluster-issuer: "letsencrypt-production"
              nginx.ingress.kubernetes.io/use-regex: "true"
              hosts:
                - rotemhostname.ddns.net
              paths:
                - /grafana/?(.*)
              pathType: Prefix

            tls:
              - secretName: app-tls
                hosts:
                  - rotemhostname.ddns.net

    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true


---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-crds
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    name: in-cluster
    namespace: monitor
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/crds/
    targetRevision: kube-prometheus-stack-34.1.1
    directory:
      recurse: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      prune: true
      selfHeal: true