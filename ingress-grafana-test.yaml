# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: grafana-ingress
#   namespace: monitor
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
#     nginx.ingress.kubernetes.io/use-regex: "true"

# spec:
#   rules:
#   - host: rotemhostname.ddns.net
#   http:
#     paths:
#     - path: /grafana/(.*)
#     backend:
#      serviceName: grafana
#      servicePort: 80

# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: grafana-ingress
# #   namespace: monitor
# #   annotations:
# #     kubernetes.io/ingress.class: nginx
# #     nginx.ingress.kubernetes.io/rewrite-target: /
  
# #     certmanager.k8s.io/cluster-issuer: 'letsencrypt-prod'
# #     nginx.ingress.kubernetes.io/ssl-redirect: 'true'
# #     nginx.ingress.kubernetes.io/use-regex: "true"
# # spec:
# #   tls:
# #    - hosts:
# #        - rotemhostname.ddns.net
# #      secretName: app-tls
# #   rules:
# #    - host: rotemhostname.ddns.net
# #      http:
# #        paths:
# #         - path: /grafana/?(.*)
# #           pathType: Prefix
# #           backend:
# #            service:
# #             name: kube-prometheus-stack-grafana
# #             port: 
# #               number: 80
# ingress:
#   enabled: true
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     cert-manager.io/cluster-issuer: "letsencrypt-production"
#     nginx.ingress.kubernetes.io/use-regex: "true"

#   path: /grafana/?(.*)
#   hosts:
#     - rotemhostname.ddns.net

#   tls:
#   - hosts:
#       - rotemhostname.ddns.net
#     secretName: app-tls

# grafana.ini:
#   server:
#     root_url: http://localhost:3000/grafana 
